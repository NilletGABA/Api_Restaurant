spring.application.name=Api_Restaurant

#Configurando la base de datos LOCAL
#Spring.datasource.url=jdbc:postgresql://localhost:5432/restaurant_db
#spring.datasource.username=postgres
#spring.datasource.password=root
#spring.datasource.driver-class-name=org.postgresql.Driver

#Configurando la base de datos RENDER
spring.datasource.url=jdbc:postgresql://dpg-d2agvsc9c44c738s5mk0-a.oregon-postgres.render.com:5432/restaurant_db_rmfy
spring.datasource.username=restaurant_db_rmfy_user
spring.datasource.password=0TpHNvLd1gbmr552oehss5v6fbOwBx2O
spring.datasource.driver-class-name=org.postgresql.Driver


#Propeidades para JPA/Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#Actualize la base de datos
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Clave secreta utilizada para firmar y verificar los tokens JWT. Debe mantenerse segura.
jwt.secret=chLhMF9w3mwDutysbQxsX8x4CGwZef4mayTGSmbAG2BUsXbYFKvXrVfnPCa62PJxp9TuHxx4PQAS2yGUTBAPy3Dy53j8Uj2wb2AQ3nK8VLg7tUx9HCzHATEp
# Tiempo de validez de los tokens JWT en segundos (30 dias).
jwt.validity-in-seconds=31536000

gamboa.openapi.dev-url=http://localhost:8080/api/v1
gamboa.openapi.prod-url=https://restaurant-reservation-api-kv05.onrender.com/api/v1

paypal.client-id=AZDe_mhvkuUBzNM14LMCPXatJNrbsjMs00cTh8Cfoti9IYD1agpENehwbErxGDp-w_rBAy27bBKKk3Xx
paypal.client-secret=EBddX7oeTWa4Nt8lqMHdQxexqZ2cxNzW5gU6rk73EduWuoGbdkl4RhFzEe00UwcWsT7bOxlj6-o-kthm
paypal.api-base=https://api-m.sandbox.paypal.com

#Configuracion del path base para los endpoints
server.servlet.context-path=/api/v1
